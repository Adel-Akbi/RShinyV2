# ui <- fluidPage(                                                                                  #The entire page will be respensive
#
#
#
#   fluidRow(                                                                                       #Devise the page by row and column (boostrap)
#
#     column(9,
#            titlePanel('TunnelGoalFitts Visualizer (Cohort 2020)')
#     ),
#
#     column(3,
#            selectInput(
#              inputId = 'in1',
#              label = '',
#              choices = c(Choose='', state.name),
#              selectize=FALSE),
#
#            tags$div(
#              style = "margin-bottom: 80px",
#
#            )
#     ),
#
#
#
#     column(12,
#            tabsetPanel(
#              type = "tab",
#              tabPanel(
#                inputId = "testd",
#                title = "Test Details"
#
#              ),
#
#              tabPanel(
#                inputId = "compt",
#                title= "Compare Test"
#
#
#
#
#                # verbatimTextOutput("summary")                           #check afterrrrrrrrrrrrr
#              )
#            ),
#
#            tags$div(
#              style = "margin-bottom: 100px"
#            )
#
#
#     ),
#
#
#     column(3,
#            selectInput(
#              inputId = 'in1',
#              label = 'Choose Test',
#              choices = c(Choose='', state.name),
#              selectize=FALSE),
#
#
#     ),
#
#
#
#     column(9,
#            plotlyOutput(
#              outputId = "plot1"
#            ),
#
#
#            tags$div(
#              style = "margin-bottom: 50px"
#            )
#     ),
#
#     column(7,
#
#     ),
#
#
#     column(5,
#            selectInput(
#              inputId = 'in1',
#              label = '',
#              choices = c(Choose='', state.name),
#              selectize=FALSE),)
#   )
#
# )
#
#
# library(shiny)
# library(plotly)
#
# # Define UI for application that plots features of movies
# shinyUI(navbarPage(title = "Whack A Mole VR",
#                    tabPanel(
#                      "Tests results",
#
#                      # Sidebar layout with a input and output definitions
#                      sidebarLayout(
#                        # Inputs
#                        sidebarPanel(
#                          uiOutput("Date"),
#                          uiOutput("Participants"),
#                          uiOutput("Difficulty"),
#                          uiOutput("TestId")
#                        ),
#
#                        # Outputs
#                        mainPanel(tabsetPanel(
#                          tabPanel("Hit location",
#                                   selectInput(
#                                     "HeatMapDisplay",
#                                     label = "",
#                                     choices = list("Hits - Misses" = "-1", "Hits" = "1", "Misses" = "2"),
#                                     selected = -1
#                                   ),
#                                   plotlyOutput("PrecisionHeatMap")
#                          ),
#                          tabPanel("Precision",
#                                   plotlyOutput("plot")
#                          )
#                        ),
#                        hr(),
#                        fluidRow(
#                          column(6,
#                                 textOutput("ParticipantTextOutput"),
#                                 textOutput("TestTextOutput"),
#                                 textOutput("DurationTextOutput"),
#                                 textOutput("SpeedTextOutput")
#                          ),
#                          column(6,
#                                 textOutput("MirrorEffectTextOutput"),
#                                 textOutput("DualLaserTextOutput"),
#                                 textOutput("EyePatchTextOutput"),
#                                 textOutput("PrismEffectTextOutput")
#                          )
#                        )
#                        )
#                      )
#                    )))
library(shiny)
library(plotly)
ui <- fluidPage(
titlePanel(
fluidRow(
column(9,"TunnelGoalFitts Visualizer (Cohort 2020)"),                           #Title
column(3,                                                                    #DropDown
verbatimTextOutput('outtt'),
selectInput('in1',
'',
c(Choose='', state.name), selectize=FALSE)
)
)
),
tabsetPanel(type = "tab",
tabPanel(strong("Test Details"),
br(),
br(),
br(),
br(),
column(4, h4("Choose Test")
),
fluidRow(
column(9,
verbatimTextOutput('out'),
selectInput('in1', 'Options', c(Choose='', state.name), selectize=FALSE)
)
)
),
tabPanel(strong("Compare Tests"), verbatimTextOutput("summary"))
),
mainPanel(
plotlyOutput("plot1")
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('D:/ProjectAalborg/Project/RShinyApp')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(shiny)
library(plotly)
ui <- fluidPage(
titlePanel(
fluidRow(
column(9,
"TunnelGoalFitts Visualizer (Cohort 2020)"),                            #Title
# column(2,
#        icon("address-book")                                                  #Icon
#        ),
column(3,                                                                    #DropDown
verbatimTextOutput('outtt'),
icon("address-book",
selectInput('in1',
'',
c(Choose='', state.name), selectize=FALSE)
)
)
),
tabsetPanel(type = "tab",
tabPanel(strong("Test Details"),
sidebarLayout(
# Inputs
sidebarPanel(
selectInput('in1', 'Choose Test', c(Choose='', state.name), selectize=FALSE),
p("Test Details")
#RebderText To generate the text
),
mainPanel(
plotlyOutput("plot1"),
selectInput('in1', '', c(Choose='', state.name), selected = 'Index of Difficulty', selectize=FALSE)
)
),
),
tabPanel(
strong("Compare Test"),
sidebarLayout(
# Inputs
sidebarPanel(
selectInput('in1', 'Test Type', c(Choose='',state.name), selectize=FALSE),
p("Input To Compare : "),
radioButtons("button",
"Compare Human Performance to..",
c("Eyes and Eyes tracker", "Nose and Mouse", "Right Hand and Mouse"))
),
mainPanel(
plotlyOutput("plot2"),
selectInput('in1', '', c(Choose='', state.name), selectize=FALSE)
)
),
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(plotly)
ui <- fluidPage(
# titlePanel(
fluidRow(
#Title
column(9,
titlePanel(title = "TunnelGoalFitts Visualizer (Cohort 2020)")
),
#Icon
column(1,
style = "margin-top: 20px; text-align: right;",
icon("user", class = "fa-2x")
),
#DropDown
column(2,
style = "margin-top: 20px;",
# selectInput('in1',
#             NULL,
#             c(Choose='', state.name), selectize=FALSE,
selectInput("mail",
NULL,
choices = GenerateSelectChoices(default = "Everyone's Data", text = "", fieldName = "UserID")),
)
# )
),
tabsetPanel(type = "tab",
tabPanel(strong("Test Details"),
sidebarLayout(
# Inputs
sidebarPanel(
selectInput('in1', 'Choose Test', c(Choose='', state.name), selectize=FALSE),
p("Test Details")
#RebderText To generate the text
),
mainPanel(
plotlyOutput("plot1"),
selectInput('in1', '', c(Choose='', state.name), selected = 'Index of Difficulty', selectize=FALSE)
)
)
),
tabPanel(
strong("Compare Test"),
sidebarLayout(
# Inputs
sidebarPanel(
selectInput('in1', 'Test Type', c(Choose='',state.name), selectize=FALSE),
p("Input To Compare : "),
radioButtons("button",
"Compare Human Performance to..",
c("Eyes and Eyes tracker", "Nose and Mouse", "Right Hand and Mouse"))
),
mainPanel(
plotlyOutput("plot2"),
selectInput('in1', '', c(Choose='', state.name), selectize=FALSE)
)
)
)
)
)
runApp()
runApp()
runApp()
install.packages(c("BH", "mime", "pillar", "vctrs"))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(plotly)
ui <- fluidPage(
# titlePanel(
fluidRow(
#Title
column(9,
titlePanel(title = "TunnelGoalFitts Visualizer (Cohort 2020)")
),
#Icon
column(1,
style = "margin-top: 20px; text-align: right;",
icon("user", class = "fa-2x")
),
#DropDown
column(2,
style = "margin-top: 20px;",
selectInput("mail",
NULL,
choices = GenerateSelectChoices(default = "Everyone's Data", text = "", fieldName = "UserID")
),
)
),
tabsetPanel(type = "tab",
tabPanel(strong("Test Details"),
sidebarLayout(
# Inputs
sidebarPanel(
selectInput("Test",
"Choose Test",
choices = GenerateSelectChoices(default = "", text = "", fieldName = "SessionTime")
),
p("Test Details")
#RebderText To generate the text
),
mainPanel(
plotlyOutput("plot1"),
selectInput('in1', '', c(Choose='', state.name), selected = 'Index of Difficulty', selectize=FALSE)
)
)
),
tabPanel(
strong("Compare Test"),
sidebarLayout(
# Inputs
sidebarPanel(
selectInput("Type",
"Test Type",
choices = GenerateSelectChoices(default = "", text = "", fieldName = "GameType"),
p("Input To Compare : "),
radioButtons("button",
"Compare Human Performance to..",
c("Eyes and Eyes tracker", "Nose and Mouse", "Right Hand and Mouse"))
),
mainPanel(
plotlyOutput("plot2"),
selectInput('in1', '', c(Choose='', state.name), selectize=FALSE)
)
)
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
